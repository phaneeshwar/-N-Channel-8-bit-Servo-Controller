module Frequencydivider (
      parameter required_clk_frequency = 128_000,
		parameter clk_frequency = 50_000_000
		)(
		  input clk,
		  output reg clkdiv
		  );
		  
localparam integer ceil_clkcycle = ((clk_frequency + required_clk_frequency - 1) / required_clk_frequency); 
reg clkcycle;

always @(clk_frequency or required_clk_frequency) begin

if (ceil_clkcycle % 2 == 0 ) begin
    clkcycle <= ceil_clkcycle;
	 end
else begin
    clkcycle <= ceil_clkcycle - 1;
end

reg[10:0] counter = 0;
localparam half_clkcycle = clkcycle / 2 ;

always @(posedge clk) begin
    if (counter < half_clkcycle) begin
	     counter <= counter + 1;
		  clkdiv <= 1;
		  end
	  else if (counter >= half_clkcycle && counter < clkcycle ) begin
	      counter <= counter + 1;
			clkdiv <= 0;
			end
		else begin
		    counter <= 0;
		end
end
endmodule
 


